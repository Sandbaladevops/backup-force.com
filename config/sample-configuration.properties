# This is example configuration for backup-force.com utility
# copy it and comment relevant lines and use in --config parameter

# Data will be extracted in the folder defined by outputFolder key
outputFolder=/full/path/to/backup/folder

# =========================================
# Specify the login credentials for the desired Salesforce organisation
sf.username = my@name.com
sf.password = password-and-token

# uncomment for Production Orgs
#sf.serverurl = https://login.salesforce.com
# uncomment for Sandbox Orgs
#sf.serverurl = https://test.salesforce.com

# =========================================
# You can specify selected or ALL object types

# selected types
#backup.objects=Account, Contact

# or use * to specify ALL object types
#backup.objects=*

# =========================================
# You can set a specific per-object query using backup.soql.<ObjectName> key 
# and/or global WHERE (for all other objects) using backup.global.where key

# example 1: select Id and Name field from Account and limit to 10 records
#backup.soql.Account=select Id, Name from Account limit 10

# example 2: Select all fields from Contact where last modified date is this year
#backup.soql.Account=select * from Contact where LastModifiedDate = $Object.LastModifiedDate

# =========================================
# Global where clause is applied to all objects that do not have backup.soql.<ObjectName> property
# be careful because not all objects may support fields you use in global.where

# example 1: extract all records with LastModifiedDate >= 'date of last retrieval', i.e. Incremental extract
#backup.global.where=LastModifiedDate >= $Object.LastModifiedDate

# example 2: extract objects created this year
#backup.global.where=CreatedDate >= THIS_YEAR

# =========================================
# if files (Attachment, Document) should be saved as real files as well as .csv then use backup.extract.file 
# available values: $id, $name, $ext
#backup.extract.file=$name-$id.$ext

